syntax = "proto3";

package message;

option go_package = "him/common/protocol/msg/group";

// -----------------------------群管理

// 群信息
message GroupInfo {
    uint64 GroupID = 1; // 群编号
    string Name = 2; // 群名
    string Icon = 3; // 图标
    uint32 Members = 4; // 成员数
    string Notice = 5; // 群公告
}

// 更新群名请求
message UpdateGroupNameReq {
    uint64 GroupID = 1; // 群编号
    string Name = 2; // 群名
}

// 更新群名响应
message UpdateGroupNameRsp {}

// 更新群图标请求
message UpdateGroupIconReq {
    uint64 GroupID = 1; // 群编号
    string Icon = 2; // 图标
}

// 更新群图标响应
message UpdateGroupIconRsp {}

// 更新群公告请求
message UpdateGroupNoticeReq {
    uint64 GroupID = 1; // 群编号
    uint64 OperatorID = 2; // 操作者编号
    string Notice = 3; // 群公告
}

// 更新群公告响应
message UpdateGroupNoticeRsp {}

// 获取群信息请求
message GetGroupInfoReq {
    uint64 GroupID = 1; // 群编号
}

// 获取群信息响应
message GetGroupInfoRsp {
    GroupInfo GroupInfo = 1; // 群信息
}

// 创建群请求
message CreateGroupReq {
    string Name = 1; // 群名
    string Icon = 2; // 图标
    repeated uint64 MemberIDS = 3; // 初始成员编号列表
}

// 创建群响应
message CreateGroupRsp {
    uint64 GroupID = 1; // 群编号
}

// 踢出群成员请求
message KickGroupMemberReq {
    uint64 GroupID = 1; // 群编号
    uint64 OperatorID = 2; // 操作者编号
    repeated uint64 GroupMemberIDS = 3; // 群成员编号列表
}

// 踢出群成员响应
message KickGroupMemberRsp {}

// 转让群主请求
message TransferGroupLeaderReq {
    uint64 GroupID = 1; // 群编号
    uint64 NewLeaderID = 2; // 新群主编号
}

// 转让群主响应
message TransferGroupLeaderRsp {}

// 退群请求
message QuitGroupReq {
    uint64 GroupID = 1; // 群编号
    uint64 MemberID = 2; // 成员编号
}

// 退群响应
message QuitGroupRsp {}

// 群成员角色
enum GroupMemberRole {
    GroupMemberRoleUnKnown = 0; // 未知
    GroupMemberRoleMember = 1; // 成员
    GroupMemberRoleManager = 2; // 管理员
    GroupMemberRoleLeader = 3; // 群主
}

// 群成员范围
enum GroupMemberRange {
    GroupMemberRangeAll = 0; // 全部
    GroupMemberRangeMember = 1; // 成员
    GroupMemberRangeManager = 2; // 管理员
    GroupMemberRangeLeader = 3; // 群主
}

// 群成员信息
message GroupMemberInfo {
    uint64 GroupID = 1; // 群编号
    uint64 MemberID = 2; // 成员编号
    GroupMemberRole Role = 3; // 角色
    string GroupNickName = 4; // 群昵称
    bool IsDisturb = 5; // 是否免打扰
    bool IsTop = 6; // 是否置顶
    bool IsShowNickName = 7; // 是显示群成员昵称
    uint64 JoinTime = 8; // 入群时间
}

// 获取群成员信息请求
message GetGroupMemberInfosReq {
    uint64 GroupID = 1; // 群编号
    GroupMemberRange Range = 2; // 范围
}

// 获取群成员信息响应
message GetGroupMemberInfosRsp {
    repeated GroupMemberInfo GroupMemberInfos = 1; // 群成员信息列表
}



// -------------------------------入群申请

// 入群申请请求（用于扫码入群）
message JoinGroupApplicationReq {
    uint64 GroupID = 1; // 群编号
    uint64 JoinGroupUserID = 2; // 入群用户编号
    string JoinGroupUserMsg = 3; // 入群用户消息
}

// 入群申请响应
message JoinGroupApplicationRsp {
    uint64 JoinGroupEventID = 1; // 入群事件编号
}

// 入群事件类型
enum JoinGroupEventType {
    JoinGroupEventTypeUnknown = 0; // 未知
    JoinGroupEventTypeApplication = 1; // 申请
    JoinGroupEventTypeInvite = 2; // 邀请
}

// 入群申请状态
enum JoinGroupApplicationStatus {
    JoinGroupApplicationStatusUnknown = 0; // 未知
    JoinGroupApplicationStatusWaitConfirm = 1; // 等待确认
    JoinGroupApplicationStatusReject = 2; // 拒绝
    JoinGroupApplicationStatusAccept = 3; // 接受
    JoinGroupApplicationStatusExpire = 4; // 过期
}

// 入群邀请状态
enum JoinGroupInviteStatus {
    JoinGroupInviteStatusUnknown = 0; // 未知
    JoinGroupInviteStatusWaitManagerConfirm = 1; // 等待管理员确认
    JoinGroupInviteStatusWaitInviteeConfirm = 2; // 等待被邀请人确认
    JoinGroupInviteStatusInviteeAccept = 3; // 被邀请人接受
    JoinGroupInviteStatusManagerReject = 4; // 管理员拒绝
    JoinGroupInviteStatusInviteeReject = 5; // 被邀请人拒绝
    JoinGroupInviteStatusExpire = 6; // 过期
}

// 入群事件
message JoinGroupEvent {
    uint64 JoinGroupEventID = 1; // 入群事件编号
    uint64 GroupID = 2; // 群编号
    uint64 JoinGroupUserID = 3; // 入群用户编号
    uint64 InviterID = 4; // 邀请者编号
    JoinGroupEventType Type = 5; // 入群事件类型
    string JoinGroupUserMsg = 6; // 入群用户消息
    string ManagerMsg = 7; // 管理员消息
    JoinGroupApplicationStatus ApplicationStatus = 8; // 入群申请状态
    JoinGroupInviteStatus InviteStatus = 9; // 入群邀请状态
    uint64 CreatedAt = 10; // 创建时间
    uint64 UpdatedAt = 11; // 更新时间
}

// 更新入群事件入群用户消息请求
message UpdateJoinGroupEventJoinGroupUserMsgReq {
    uint64 JoinGroupEventID = 1; // 入群事件编号
    string JoinGroupUserMsg = 2; // 入群用户消息
}

// 更新入群事件入群用户消息响应
message UpdateJoinGroupEventJoinGroupUserMsgRsp {}

// 更新入群事件管理员消息请求
message UpdateJoinGroupEventManagerMsgReq {
    uint64 JoinGroupEventID = 1; // 入群事件编号
    string ManagerMsg = 2; // 管理员消息
}

// 更新入群事件管理员消息响应
message UpdateJoinGroupEventManagerMsgRsp {}

// 获取入群事件请求
message GetJoinGroupEventsReq {
    uint64 GroupID = 1; // 群编号
    uint64 LastJoinGroupEventID = 2; // 最后一个入群事件编号，分页
    uint32 Size = 3; // 获取多少个
}

// 获取入群事件响应
message GetJoinGroupEventsRsp {
    repeated JoinGroupEvent JoinGroupEvents = 1; // 入群事件列表
}

// 邀请入群请求
message InviteJoinGroupReq {
    uint64 GroupID = 1; // 群编号
    uint64 InviterID = 2; // 邀请者编号
    repeated uint64 InviteeIDS = 3; // 被邀请人编号列表
}

// 邀请入群响应
message InviteJoinGroupRsp {}

// 接受入群申请请求
message AcceptJoinGroupApplicationReq {
    uint64 JoinGroupEventID = 1; // 入群事件编号
}

// 接受入群申请响应
message AcceptJoinGroupApplicationRsp {}

// 拒绝入群申请请求
message RejectJoinGroupApplicationReq {
    uint64 JoinGroupEventID = 1; // 入群事件编号
}

// 拒绝入群申请响应
message RejectJoinGroupApplicationRsp {}









// ------------------------- 存储模型

// @存储模型
// 群
message GroupStore {
    uint64 GroupID = 1; // 群编号
    string Name = 2; // 群名
    string Icon = 3; // 图标
    uint32 Members = 4; // 成员数
    string Notice = 5; // 群公告
    bool IsJoinApplication = 6; // 是否接受入群申请（默认不需要申请直接入群）
    bool IsInviteJoinGroupNeedConfirm = 7; // 是否邀请入群需要管理员或群主确认（默认不需要确认直接入群）
    uint64 CreatedAt = 8; // 建立时间
    uint64 UpdatedAt = 9; // 修改时间
}

// @存储模型
// 入群事件
// 这里在检索的时候根据JoinGroupUserID查询自己的所有申请和邀请
// 根据GroupID查询群的所有申请和邀请
// 还可以根据事件类型区分申请和邀请
message JoinGroupEventStore {
    JoinGroupEvent JoinGroupEvent = 1; // 入群事件
}

// @存储模型
// 群成员
message GroupMemberStore {
    uint64 GroupID = 1; // 群编号
    uint64 MemberID = 2; // 成员编号
    GroupMemberRole Role = 3; // 角色
    string GroupNickName = 4; // 群昵称
    bool IsDisturb = 5; // 是否免打扰
    bool IsTop = 6; // 是否置顶
    bool IsShowNickName = 7; // 是显示群成员昵称
    uint64 JoinTime = 8; // 入群时间
    uint64 UpdatedAt = 9; // 修改时间
}